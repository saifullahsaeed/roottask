import type { Team } from "@prisma/client";
import { TaskPriority, TeamRole } from "@prisma/client";
import type { Task } from "@prisma/client";

export const initialColumns = [
  {
    id: "backlog",
    title: "Backlog",
    tasks: [
      {
        id: "task-6",
        title:
          "Research AI integration for task automation and intelligent suggestions",
        description:
          "Explore AI capabilities for task automation and suggestions. Focus on Google Assistant API, Apple Assistant API, and Amazon Alexa API integration. Evaluate natural language processing for task creation and management. Consider implementing machine learning algorithms for task prioritization based on user behavior patterns and historical data. Research potential privacy concerns and data security measures for AI integration.",
        status: {
          id: "status-1",
          name: "Backlog",
          description: "Tasks that are waiting to be started",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.URGENT,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-1",
            taskId: "task-6",
            teamMemberId: "member-1",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-1",
              userId: "user-1",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-1",
                name: "John Doe",
                email: "john@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
          {
            id: "assignment-2",
            taskId: "task-6",
            teamMemberId: "member-2",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-2",
              userId: "user-2",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-2",
                name: "Jane Smith",
                email: "jane@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(),
        dueDate: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: "task-7",
        title:
          "Implement comprehensive analytics dashboard with real-time data visualization",
        description:
          "Create a powerful analytics dashboard that provides real-time insights into project performance, team productivity, and resource allocation. Include customizable charts, graphs, and reports. Implement data export functionality and scheduled report generation. Ensure mobile responsiveness and accessibility compliance.",
        status: {
          id: "status-1",
          name: "Backlog",
          description: "Tasks that are waiting to be started",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.HIGH,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-8",
            taskId: "task-7",
            teamMemberId: "member-3",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-3",
              userId: "user-3",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-3",
                name: "Mike Johnson",
                email: "mike@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(),
        dueDate: new Date(Date.now() + 14 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ],
  },
  {
    id: "todo",
    title: "To Do",
    tasks: [
      {
        id: "task-1",
        title:
          "Design new dashboard layout with dark mode support and accessibility features",
        description:
          "Create a modern and intuitive dashboard design with dark mode support. Focus on user experience and accessibility. Implement responsive design for all device sizes. Include customizable widgets and layouts. Ensure WCAG 2.1 AA compliance for all UI elements.",
        status: {
          id: "status-1",
          name: "To Do",
          description: "Tasks that are waiting to be started",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.HIGH,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-3",
            taskId: "task-1",
            teamMemberId: "member-2",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-2",
              userId: "user-2",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-2",
                name: "Jane Smith",
                email: "jane@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(),
        dueDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: "task-2",
        title:
          "Implement user authentication with OAuth2, email verification, and password reset functionality",
        description:
          "Set up OAuth2 with Google and GitHub providers. Include email verification and password reset functionality. Implement JWT token-based authentication with refresh tokens. Add rate limiting and brute force protection. Create comprehensive documentation for the authentication flow.",
        status: {
          id: "status-1",
          name: "To Do",
          description: "Tasks that are waiting to be started",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.MEDIUM,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-4",
            taskId: "task-2",
            teamMemberId: "member-1",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-1",
              userId: "user-1",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-1",
                name: "John Doe",
                email: "john@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(),
        dueDate: new Date(Date.now() + 5 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: "task-8",
        title: "Bug fix",
        description:
          "Fix the issue with task assignments not showing correctly in the UI.",
        status: {
          id: "status-1",
          name: "To Do",
          description: "Tasks that are waiting to be started",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.LOW,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-9",
            taskId: "task-8",
            teamMemberId: "member-3",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-3",
              userId: "user-3",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-3",
                name: "Mike Johnson",
                email: "mike@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(),
        dueDate: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ],
  },
  {
    id: "in-progress",
    title: "In Progress",
    tasks: [
      {
        id: "task-3",
        title:
          "API Integration with third-party services for data synchronization and real-time updates",
        description:
          "Integrate third-party APIs for data synchronization and real-time updates. Implement webhook handlers for event-driven architecture. Set up error handling and retry mechanisms. Create comprehensive API documentation with examples. Implement rate limiting and caching strategies for optimal performance.",
        status: {
          id: "status-2",
          name: "In Progress",
          description: "Tasks currently being worked on",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.HIGH,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-5",
            taskId: "task-3",
            teamMemberId: "member-3",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-3",
              userId: "user-3",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-3",
                name: "Mike Johnson",
                email: "mike@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(Date.now() - 2 * 24 * 60 * 60 * 1000),
        dueDate: new Date(Date.now() + 2 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: "task-9",
        title: "Performance optimization",
        description:
          "Optimize database queries and implement caching to improve application performance.",
        status: {
          id: "status-2",
          name: "In Progress",
          description: "Tasks currently being worked on",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.MEDIUM,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-10",
            taskId: "task-9",
            teamMemberId: "member-1",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-1",
              userId: "user-1",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-1",
                name: "John Doe",
                email: "john@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
          {
            id: "assignment-11",
            taskId: "task-9",
            teamMemberId: "member-2",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-2",
              userId: "user-2",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-2",
                name: "Jane Smith",
                email: "jane@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
        dueDate: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ],
  },
  {
    id: "review",
    title: "Review",
    tasks: [
      {
        id: "task-4",
        title:
          "Code Review and refactoring for improved maintainability and performance",
        description:
          "Review pull requests and provide feedback on code quality and best practices. Identify areas for refactoring to improve maintainability and performance. Ensure consistent coding standards across the codebase. Implement automated code quality checks in the CI/CD pipeline. Create documentation for common patterns and anti-patterns.",
        status: {
          id: "status-3",
          name: "Review",
          description: "Tasks ready for review",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.MEDIUM,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-6",
            taskId: "task-4",
            teamMemberId: "member-1",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-1",
              userId: "user-1",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-1",
                name: "John Doe",
                email: "john@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
        dueDate: new Date(Date.now() + 1 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ],
  },
  {
    id: "done",
    title: "Done",
    tasks: [
      {
        id: "task-5",
        title: "Database Optimization and query performance improvements",
        description:
          "Optimize database queries and indexes for better performance. Implement connection pooling and query caching. Create database migration scripts for schema updates. Set up database monitoring and alerting. Document database schema and optimization strategies for future reference.",
        status: {
          id: "status-4",
          name: "Done",
          description: "Completed tasks",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.LOW,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-7",
            taskId: "task-5",
            teamMemberId: "member-3",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-3",
              userId: "user-3",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-3",
                name: "Mike Johnson",
                email: "mike@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(Date.now() - 5 * 24 * 60 * 60 * 1000),
        dueDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
      {
        id: "task-10",
        title: "UI update",
        description:
          "Update the user interface to match the new design guidelines.",
        status: {
          id: "status-4",
          name: "Done",
          description: "Completed tasks",
          tasks: [],
          createdAt: new Date(),
          updatedAt: new Date(),
        },
        priority: TaskPriority.LOW,
        projectId: "",
        statusId: "",
        checklist: [],
        comments: [],
        assignments: [
          {
            id: "assignment-12",
            taskId: "task-10",
            teamMemberId: "member-2",
            assignedAt: new Date(),
            task: {} as Task,
            teamMember: {
              id: "member-2",
              userId: "user-2",
              teamId: "team-1",
              role: TeamRole.MEMBER,
              joinedAt: new Date(),
              team: {} as Team,
              user: {
                id: "user-2",
                name: "Jane Smith",
                email: "jane@example.com",
                emailVerified: null,
                image: null,
                createdAt: new Date(),
                updatedAt: new Date(),
              },
              createdAt: new Date(),
              updatedAt: new Date(),
            },
            createdAt: new Date(),
            updatedAt: new Date(),
          },
        ],
        isRecurring: false,
        startDate: new Date(Date.now() - 3 * 24 * 60 * 60 * 1000),
        dueDate: new Date(Date.now() - 1 * 24 * 60 * 60 * 1000),
        createdAt: new Date(),
        updatedAt: new Date(),
      },
    ],
  },
  {
    id: "discarded",
    title: "Discarded",
    tasks: [],
  },
];
